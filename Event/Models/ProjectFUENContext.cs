// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Event.Models
{
    public partial class ProjectFUENContext : DbContext
    {
        public ProjectFUENContext()
        {
        }

        public ProjectFUENContext(DbContextOptions<ProjectFUENContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Activities> Activities { get; set; }
        public virtual DbSet<ActivityCategories> ActivityCategories { get; set; }
        public virtual DbSet<ActivityCollections> ActivityCollections { get; set; }
        public virtual DbSet<ActivityMembers> ActivityMembers { get; set; }
        public virtual DbSet<AlbumItems> AlbumItems { get; set; }
        public virtual DbSet<Albums> Albums { get; set; }
        public virtual DbSet<Answers> Answers { get; set; }
        public virtual DbSet<Brands> Brands { get; set; }
        public virtual DbSet<Categories> Categories { get; set; }
        public virtual DbSet<CommentReports> CommentReports { get; set; }
        public virtual DbSet<Comments> Comments { get; set; }
        public virtual DbSet<Coupons> Coupons { get; set; }
        public virtual DbSet<Events> Events { get; set; }
        public virtual DbSet<FollowInfos> FollowInfos { get; set; }
        public virtual DbSet<IndiscriminateReports> IndiscriminateReports { get; set; }
        public virtual DbSet<Instructors> Instructors { get; set; }
        public virtual DbSet<Members> Members { get; set; }
        public virtual DbSet<OrderDetails> OrderDetails { get; set; }
        public virtual DbSet<OrderItems> OrderItems { get; set; }
        public virtual DbSet<OthersCollections> OthersCollections { get; set; }
        public virtual DbSet<OwnCollections> OwnCollections { get; set; }
        public virtual DbSet<PhotoReports> PhotoReports { get; set; }
        public virtual DbSet<Photos> Photos { get; set; }
        public virtual DbSet<ProductPhotos> ProductPhotos { get; set; }
        public virtual DbSet<Products> Products { get; set; }
        public virtual DbSet<Questions> Questions { get; set; }
        public virtual DbSet<ShoppingCarts> ShoppingCarts { get; set; }
        public virtual DbSet<Tags> Tags { get; set; }
        public virtual DbSet<Views> Views { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Activities>(entity =>
            {
                entity.Property(e => e.ActivityName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Address)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.CoverImage)
                    .IsRequired()
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.DateOfCreated)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Deadline).HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.GatheringTime).HasColumnType("datetime");

                entity.Property(e => e.Recommendation)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.HasOne(d => d.Category)
                    .WithMany(p => p.Activities)
                    .HasForeignKey(d => d.CategoryId)
                    .OnDelete(DeleteBehavior.SetNull)
                    .HasConstraintName("FK__Activitie__Categ__34C8D9D1");

                entity.HasOne(d => d.Istructor)
                    .WithMany(p => p.Activities)
                    .HasForeignKey(d => d.IstructorId)
                    .OnDelete(DeleteBehavior.SetNull)
                    .HasConstraintName("FK__Activitie__Istru__33D4B598");
            });

            modelBuilder.Entity<ActivityCategories>(entity =>
            {
                entity.HasIndex(e => e.DisplayOrder, "UQ__Activity__FB8517E6D7F2F089")
                    .IsUnique();

                entity.Property(e => e.CategoryName)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<ActivityCollections>(entity =>
            {
                entity.Property(e => e.DateCreated)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Activity)
                    .WithMany(p => p.ActivityCollections)
                    .HasForeignKey(d => d.ActivityId)
                    .HasConstraintName("FK__ActivityC__Activ__38996AB5");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.ActivityCollections)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK__ActivityC__UserI__398D8EEE");
            });

            modelBuilder.Entity<ActivityMembers>(entity =>
            {
                entity.Property(e => e.DateJoined)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Activity)
                    .WithMany(p => p.ActivityMembers)
                    .HasForeignKey(d => d.ActivityId)
                    .HasConstraintName("FK__ActivityM__Activ__3D5E1FD2");

                entity.HasOne(d => d.Member)
                    .WithMany(p => p.ActivityMembers)
                    .HasForeignKey(d => d.MemberId)
                    .HasConstraintName("FK__ActivityM__Membe__3E52440B");
            });

            modelBuilder.Entity<AlbumItems>(entity =>
            {
                entity.HasKey(e => new { e.AlbumId, e.PhotoId })
                    .HasName("PK__AlbumIte__A5AFC56986FD06B2");

                entity.Property(e => e.AddTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Album)
                    .WithMany(p => p.AlbumItems)
                    .HasForeignKey(d => d.AlbumId)
                    .HasConstraintName("FK__AlbumItem__Album__4A8310C6");

                entity.HasOne(d => d.Photo)
                    .WithMany(p => p.AlbumItems)
                    .HasForeignKey(d => d.PhotoId)
                    .HasConstraintName("FK__AlbumItem__Photo__4B7734FF");
            });

            modelBuilder.Entity<Albums>(entity =>
            {
                entity.Property(e => e.CreatedTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Name).HasMaxLength(50);

                entity.HasOne(d => d.Member)
                    .WithMany(p => p.Albums)
                    .HasForeignKey(d => d.MemberId)
                    .HasConstraintName("FK__Albums__MemberId__46B27FE2");
            });

            modelBuilder.Entity<Answers>(entity =>
            {
                entity.Property(e => e.Content)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.DateCreated)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Question)
                    .WithMany(p => p.Answers)
                    .HasForeignKey(d => d.QuestionId)
                    .HasConstraintName("FK__Answers__Questio__46E78A0C");
            });

            modelBuilder.Entity<Brands>(entity =>
            {
                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Categories>(entity =>
            {
                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<CommentReports>(entity =>
            {
                entity.Property(e => e.ReportTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Comment)
                    .WithMany(p => p.CommentReports)
                    .HasForeignKey(d => d.CommentId)
                    .HasConstraintName("FK__CommentRe__Comme__18B6AB08");

                entity.HasOne(d => d.ReporterNavigation)
                    .WithMany(p => p.CommentReports)
                    .HasForeignKey(d => d.Reporter)
                    .HasConstraintName("FK__CommentRe__Repor__17C286CF");
            });

            modelBuilder.Entity<Comments>(entity =>
            {
                entity.Property(e => e.CommentTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Content)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.HasOne(d => d.Member)
                    .WithMany(p => p.Comments)
                    .HasForeignKey(d => d.MemberId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__Comments__Member__6442E2C9");

                entity.HasOne(d => d.Photo)
                    .WithMany(p => p.Comments)
                    .HasForeignKey(d => d.PhotoId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("FK__Comments__PhotoI__65370702");
            });

            modelBuilder.Entity<Coupons>(entity =>
            {
                entity.Property(e => e.Code)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Discount).HasColumnType("decimal(6, 2)");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Events>(entity =>
            {
                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.EventName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Photo)
                    .IsRequired()
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.HasMany(d => d.Product)
                    .WithMany(p => p.Event)
                    .UsingEntity<Dictionary<string, object>>(
                        "EventItems",
                        l => l.HasOne<Products>().WithMany().HasForeignKey("ProductId").HasConstraintName("FK__EventItem__Produ__3552E9B6"),
                        r => r.HasOne<Events>().WithMany().HasForeignKey("EventId").HasConstraintName("FK__EventItem__Event__345EC57D"),
                        j =>
                        {
                            j.HasKey("EventId", "ProductId").HasName("PK__EventIte__B204047C6C8B8B2B");

                            j.ToTable("EventItems");
                        });
            });

            modelBuilder.Entity<FollowInfos>(entity =>
            {
                entity.HasKey(e => new { e.Follower, e.Following })
                    .HasName("PK__FollowIn__512B98D2831ED227");

                entity.Property(e => e.FollowTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.FollowerNavigation)
                    .WithMany(p => p.FollowInfosFollowerNavigation)
                    .HasForeignKey(d => d.Follower)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__FollowInf__Follo__5F7E2DAC");

                entity.HasOne(d => d.FollowingNavigation)
                    .WithMany(p => p.FollowInfosFollowingNavigation)
                    .HasForeignKey(d => d.Following)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__FollowInf__Follo__607251E5");
            });

            modelBuilder.Entity<IndiscriminateReports>(entity =>
            {
                entity.HasKey(e => e.MemberId)
                    .HasName("PK__Indiscri__0CF04B18F9117A1A");

                entity.Property(e => e.MemberId).ValueGeneratedNever();
            });

            modelBuilder.Entity<Instructors>(entity =>
            {
                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.InstructorName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ResumePhoto)
                    .IsRequired()
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .IsFixedLength();
            });

            modelBuilder.Entity<Members>(entity =>
            {
                entity.HasIndex(e => e.EmailAccount, "UQ__Members__005407CDD62C4870")
                    .IsUnique();

                entity.Property(e => e.About).HasMaxLength(500);

                entity.Property(e => e.Address).HasMaxLength(50);

                entity.Property(e => e.BirthOfDate).HasColumnType("date");

                entity.Property(e => e.ConfirmCode)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.EmailAccount)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.EncryptedPassword)
                    .IsRequired()
                    .HasMaxLength(64)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Mobile)
                    .HasMaxLength(10)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.NickName).HasMaxLength(50);

                entity.Property(e => e.PhotoSticker)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.RealName).HasMaxLength(50);

                entity.HasMany(d => d.Coupon)
                    .WithMany(p => p.Member)
                    .UsingEntity<Dictionary<string, object>>(
                        "UsedCoupons",
                        l => l.HasOne<Coupons>().WithMany().HasForeignKey("CouponId").HasConstraintName("FK__UsedCoupo__Coupo__6D0D32F4"),
                        r => r.HasOne<Members>().WithMany().HasForeignKey("MemberId").HasConstraintName("FK__UsedCoupo__Membe__6C190EBB"),
                        j =>
                        {
                            j.HasKey("MemberId", "CouponId").HasName("PK__UsedCoup__BF74E403CCFD7B38");

                            j.ToTable("UsedCoupons");
                        });

                entity.HasMany(d => d.Product)
                    .WithMany(p => p.Member)
                    .UsingEntity<Dictionary<string, object>>(
                        "Favorites",
                        l => l.HasOne<Products>().WithMany().HasForeignKey("ProductId").HasConstraintName("FK__Favorites__Produ__29E1370A"),
                        r => r.HasOne<Members>().WithMany().HasForeignKey("MemberId").HasConstraintName("FK__Favorites__Membe__28ED12D1"),
                        j =>
                        {
                            j.HasKey("MemberId", "ProductId").HasName("PK__Favorite__C7B087743595DF50");

                            j.ToTable("Favorites");
                        });
            });

            modelBuilder.Entity<OrderDetails>(entity =>
            {
                entity.Property(e => e.Address)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Member)
                    .WithMany(p => p.OrderDetails)
                    .HasForeignKey(d => d.MemberId)
                    .HasConstraintName("FK__OrderDeta__Membe__5DCAEF64");
            });

            modelBuilder.Entity<OrderItems>(entity =>
            {
                entity.HasKey(e => new { e.OrderId, e.ProductId })
                    .HasName("PK__OrderIte__08D097A3182251D2");

                entity.Property(e => e.ProductName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.HasOne(d => d.Order)
                    .WithMany(p => p.OrderItems)
                    .HasForeignKey(d => d.OrderId)
                    .HasConstraintName("FK__OrderItem__Order__308E3499");

                entity.HasOne(d => d.Product)
                    .WithMany(p => p.OrderItems)
                    .HasForeignKey(d => d.ProductId)
                    .HasConstraintName("FK__OrderItem__Produ__318258D2");
            });

            modelBuilder.Entity<OthersCollections>(entity =>
            {
                entity.HasKey(e => new { e.MemberId, e.PhotoId })
                    .HasName("PK__OthersCo__3EEB304655899A08");

                entity.Property(e => e.AddTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Member)
                    .WithMany(p => p.OthersCollections)
                    .HasForeignKey(d => d.MemberId)
                    .HasConstraintName("FK__OthersCol__Membe__4F47C5E3");

                entity.HasOne(d => d.Photo)
                    .WithMany(p => p.OthersCollections)
                    .HasForeignKey(d => d.PhotoId)
                    .HasConstraintName("FK__OthersCol__Photo__503BEA1C");
            });

            modelBuilder.Entity<OwnCollections>(entity =>
            {
                entity.HasKey(e => new { e.MemberId, e.PhotoId })
                    .HasName("PK__OwnColle__3EEB3046FB42C839");

                entity.Property(e => e.AddTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Member)
                    .WithMany(p => p.OwnCollections)
                    .HasForeignKey(d => d.MemberId)
                    .HasConstraintName("FK__OwnCollec__Membe__540C7B00");

                entity.HasOne(d => d.Photo)
                    .WithMany(p => p.OwnCollections)
                    .HasForeignKey(d => d.PhotoId)
                    .HasConstraintName("FK__OwnCollec__Photo__55009F39");
            });

            modelBuilder.Entity<PhotoReports>(entity =>
            {
                entity.Property(e => e.ReportTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Photo)
                    .WithMany(p => p.PhotoReports)
                    .HasForeignKey(d => d.PhotoId)
                    .HasConstraintName("FK__PhotoRepo__Photo__09746778");

                entity.HasOne(d => d.ReporterNavigation)
                    .WithMany(p => p.PhotoReports)
                    .HasForeignKey(d => d.Reporter)
                    .OnDelete(DeleteBehavior.SetNull)
                    .HasConstraintName("FK__PhotoRepo__Repor__0880433F");
            });

            modelBuilder.Entity<Photos>(entity =>
            {
                entity.Property(e => e.Aperture)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Camera)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.Iso).HasColumnName("ISO");

                entity.Property(e => e.Location)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Negative)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Pixel)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.ShootingTime).HasColumnType("datetime");

                entity.Property(e => e.Shutter)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Source)
                    .IsRequired()
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.Title)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.UploadTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.AuthorNavigation)
                    .WithMany(p => p.Photos)
                    .HasForeignKey(d => d.Author)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Photos__Author__42E1EEFE");
            });

            modelBuilder.Entity<ProductPhotos>(entity =>
            {
                entity.Property(e => e.Source)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.HasOne(d => d.Product)
                    .WithMany(p => p.ProductPhotos)
                    .HasForeignKey(d => d.ProductId)
                    .HasConstraintName("FK__ProductPh__Produ__2610A626");
            });

            modelBuilder.Entity<Products>(entity =>
            {
                entity.Property(e => e.ManufactorDate).HasColumnType("datetime");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.ProductSpec)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.ReleaseDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Brand)
                    .WithMany(p => p.Products)
                    .HasForeignKey(d => d.BrandId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Products__BrandI__2334397B");

                entity.HasOne(d => d.Category)
                    .WithMany(p => p.Products)
                    .HasForeignKey(d => d.CategoryId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Products__Catego__22401542");
            });

            modelBuilder.Entity<Questions>(entity =>
            {
                entity.Property(e => e.Content)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.DateCreated)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Activity)
                    .WithMany(p => p.Questions)
                    .HasForeignKey(d => d.ActivityId)
                    .HasConstraintName("FK__Questions__Activ__4222D4EF");

                entity.HasOne(d => d.Member)
                    .WithMany(p => p.Questions)
                    .HasForeignKey(d => d.MemberId)
                    .HasConstraintName("FK__Questions__Membe__4316F928");
            });

            modelBuilder.Entity<ShoppingCarts>(entity =>
            {
                entity.HasKey(e => new { e.MemberId, e.ProductId })
                    .HasName("PK__Shopping__C7B08774F4116008");

                entity.HasOne(d => d.Member)
                    .WithMany(p => p.ShoppingCarts)
                    .HasForeignKey(d => d.MemberId)
                    .HasConstraintName("FK__ShoppingC__Membe__2CBDA3B5");

                entity.HasOne(d => d.Product)
                    .WithMany(p => p.ShoppingCarts)
                    .HasForeignKey(d => d.ProductId)
                    .HasConstraintName("FK__ShoppingC__Produ__2DB1C7EE");
            });

            modelBuilder.Entity<Tags>(entity =>
            {
                entity.Property(e => e.CreatedTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.HasMany(d => d.Photo)
                    .WithMany(p => p.Tag)
                    .UsingEntity<Dictionary<string, object>>(
                        "TagItems",
                        l => l.HasOne<Photos>().WithMany().HasForeignKey("PhotoId").HasConstraintName("FK__TagItems__PhotoI__5BAD9CC8"),
                        r => r.HasOne<Tags>().WithMany().HasForeignKey("TagId").HasConstraintName("FK__TagItems__TagId__5AB9788F"),
                        j =>
                        {
                            j.HasKey("TagId", "PhotoId").HasName("PK__TagItems__576782F262B25D69");

                            j.ToTable("TagItems");
                        });
            });

            modelBuilder.Entity<Views>(entity =>
            {
                entity.Property(e => e.ViewDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Member)
                    .WithMany(p => p.Views)
                    .HasForeignKey(d => d.MemberId)
                    .HasConstraintName("FK__Views__MemberId__69FBBC1F");

                entity.HasOne(d => d.Photo)
                    .WithMany(p => p.Views)
                    .HasForeignKey(d => d.PhotoId)
                    .HasConstraintName("FK__Views__PhotoId__690797E6");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}